searchState.loadedDescShard("lenna_core", 0, "lenna-core\nVersion of lib which was used during compile.\nVersion of rust compiler which was used during compile.\ncore functionalities\nThe macro used to generate ffi c api.\nThe macro used to generate a plugin.\nInput and output of images.\nplugin related functionalities\nimage struct\nConfig functionalities\nimage meta data\nReturns the argument unchanged.\nimage data container\nCalls <code>U::from(self)</code>.\nname of image, also used as filename\npath, also folder for image when saved\nProcessors pipeline\nprocessors pool\nimage processor traits\nimage resize processor\nConfiguration of a pipeline\nProcessor configuration\nconfiguration for processor\nReturns the argument unchanged.\nReturns the argument unchanged.\nid of processor\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\npipeline of processor configs\nPipeline to serially run processors\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\npool of processors\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ntrait for exif metadata processing functionality\ntrait for image processing functionality\ntrait for processors\nImage resize processor\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ninput functions\noutput functions\nread image from file\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCopies image data into the provided buffer\nDestroys a LennaImageBuffer instance\nGets the length of the image buffer data")