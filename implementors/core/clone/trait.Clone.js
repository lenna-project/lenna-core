(function() {var implementors = {};
implementors["lenna_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lenna_core/core/config/struct.Config.html\" title=\"struct lenna_core::core::config::Config\">Config</a>","synthetic":false,"types":["lenna_core::core::config::Config"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lenna_core/core/config/struct.ProcessorConfig.html\" title=\"struct lenna_core::core::config::ProcessorConfig\">ProcessorConfig</a>","synthetic":false,"types":["lenna_core::core::config::ProcessorConfig"]},{"text":"impl&lt;'clone&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"lenna_core/core/processor/trait.Processor.html\" title=\"trait lenna_core::core::processor::Processor\">Processor</a> + 'clone&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;'clone&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"lenna_core/core/processor/trait.Processor.html\" title=\"trait lenna_core::core::processor::Processor\">Processor</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'clone&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;'clone&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"lenna_core/core/processor/trait.Processor.html\" title=\"trait lenna_core::core::processor::Processor\">Processor</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'clone&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;'clone&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"lenna_core/core/processor/trait.Processor.html\" title=\"trait lenna_core::core::processor::Processor\">Processor</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'clone&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lenna_core/core/resize/struct.Resize.html\" title=\"struct lenna_core::core::resize::Resize\">Resize</a>","synthetic":false,"types":["lenna_core::core::resize::Resize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lenna_core/plugins/struct.PluginDeclaration.html\" title=\"struct lenna_core::plugins::PluginDeclaration\">PluginDeclaration</a>","synthetic":false,"types":["lenna_core::plugins::PluginDeclaration"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()